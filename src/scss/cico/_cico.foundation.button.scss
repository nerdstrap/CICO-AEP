// Make sure the charset is set appropriately
@charset "UTF-8";

// This includes all of the foundation global elements that are needed to work with any of the other files.
//@import "foundation/variables";

// Foundation Components
//@import "foundation/components/global";
//@import "foundation/components/buttons";

// Cico globals
//@import "cico.globals";

$active: true;
$button-font-family: $default-font-family;
$button-font-med: 2em;
$button-font-weight: normal;
$padding: $button-med;
$bg: $primary-color;
$full-width: false; /* This whether button is full-width. Set to true or false */
$disabled: true; /* This controls whether disabled styles are used. Set to true or false */
$is-input: false; /* This controls padding for inputs, they are a little different */
$min-height: 70px;
$default-button-height: 70px;
$min-width: $default-button-area-min-width;
$max-width: $default-button-area-max-width;
$button-margin-bottom: 20px;

@mixin cico-button($full-width-buttons:$full-width){

    @include button($button-med, $primary-color);
    &{
        @if $full-width-buttons == true {
            max-width: 100%;
            min-width: 100%;
        }
        @else{
            max-width: $default-button-area-max-width;
            min-width: $default-button-area-min-width;
        }
        width:100%;
        font-size: 2em;
        font-weight: normal;
        line-height: 0.75em;
        padding-left: 0em;
        padding-right: 0em;
    }
    &.check-in { @include button-style($bg:$color-check-in); }
    &.check-out { @include button-style($bg:$color-check-out); }
    &.extend-duration { @include button-style($bg:$color-primary); }
    &.cico-default { @include button-style($bg:$color-secondary); }

    @include button-size($padding:false, $is-input:$button-med);
    &.tiny { @include button-size($padding:false, $is-input:$button-tny); }
    &.small { @include button-size($padding:false, $is-input:$button-sml); }
    &.large { @include button-size($padding:false, $is-input:$button-lrg); }
    &.compact { @include button-size($padding:false, $is-input:$button-sml); min-width: 120px; width: 120px; }

    @media only screen {
        @include inset-shadow();
        @include single-transition(background-color);

        &.large  { @include button-size($padding:false, $full-width:false); }
        &.small  { @include button-size($padding:false, $full-width:false); font-size:1em;}
        &.tiny   { @include button-size($padding:false, $full-width:false); font-size:0.75em;}
        &.compact   { @include button-size($padding:false, $full-width:false); font-size:1em; min-width: 120px; width: 120px;}

        &.min-width   { min-width: $min-width; max-width: max-width; }
        &.min-height  { height: $min-height; } 

        &.radius { @include button-style($bg:false, $radius:$default-corner-radius); }
        &.round  { @include button-style($bg:false, $radius:$button-round); }
    }

    // Additional styles for screens larger than 768px
    @media #{$small} {
        @include button-base($style:false, $display:inline-block);
        @include button-size($padding:false, $full-width:false);
    }
}

.cico-button {  
    @include cico-button;
}
